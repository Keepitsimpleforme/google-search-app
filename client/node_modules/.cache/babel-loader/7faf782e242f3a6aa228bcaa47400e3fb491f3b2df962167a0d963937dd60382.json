{"ast":null,"code":"var _jsxFileName = \"/Users/vivekkumar/google-search-app/client/src/pages/Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setMessage(\"Logging in...\");\n    try {\n      const res = await fetch(\"http://localhost:5001/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessage(\"✅ Login successful\");\n        login(data.token); // use context method instead of localStorage directly\n        navigate(\"/dashboard\");\n      } else {\n        setMessage(\"❌ \" + data.message);\n      }\n    } catch (err) {\n      console.error(err);\n      setMessage(\"❌ Error connecting to backend\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-sm mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"flex flex-col gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 rounded\",\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 rounded\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white p-2 rounded\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-sm\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"cqzSYSmCRRCS8xQDSaFQc6NaI90=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","useAuth","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","message","setMessage","login","navigate","handleLogin","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","token","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/vivekkumar/google-search-app/client/src/pages/Login.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\n\nexport default function Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  const handleLogin = async (e:any) => {\n    e.preventDefault();\n    setMessage(\"Logging in...\");\n\n    try {\n      const res = await fetch(\"http://localhost:5001/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n      });\n\n      const data = await res.json();\n\n      if (res.ok) {\n        setMessage(\"✅ Login successful\");\n        login(data.token); // use context method instead of localStorage directly\n        navigate(\"/dashboard\");\n      } else {\n        setMessage(\"❌ \" + data.message);\n      }\n    } catch (err) {\n      console.error(err);\n      setMessage(\"❌ Error connecting to backend\");\n    }\n  };\n\n  return (\n    <div className=\"max-w-sm mx-auto p-4\">\n      <h2 className=\"text-xl font-semibold mb-4\">Login</h2>\n      <form onSubmit={handleLogin} className=\"flex flex-col gap-2\">\n        <input\n          className=\"border p-2 rounded\"\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <input\n          className=\"border p-2 rounded\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button className=\"bg-blue-500 text-white p-2 rounded\">Login</button>\n      </form>\n      <p className=\"mt-2 text-sm\">{message}</p>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}