{"ast":null,"code":"var _jsxFileName = \"/Users/vivekkumar/google-search-app/client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    if (token) {\n      // You can decode the token to get user data if needed\n      setUser({\n        username: \"vivek\"\n      }); // hardcoded for now\n    }\n  }, [token]);\n  const login = newToken => {\n    localStorage.setItem(\"token\", newToken);\n    setToken(newToken);\n    setUser({\n      username: \"vivek\"\n    }); // ideally decoded from token\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"njwgmzyyWIcym2iWnnzS5r8RjPE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","username","login","newToken","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/vivekkumar/google-search-app/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\n\ninterface AuthContextType {\n  token: string | null;\n  user: { username: string } | null;\n  login: (token: string) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [token, setToken] = useState<string | null>(localStorage.getItem(\"token\"));\n  const [user, setUser] = useState<{ username: string } | null>(null);\n\n  useEffect(() => {\n    if (token) {\n      // You can decode the token to get user data if needed\n      setUser({ username: \"vivek\" }); // hardcoded for now\n    }\n  }, [token]);\n\n  const login = (newToken: string) => {\n    localStorage.setItem(\"token\", newToken);\n    setToken(newToken);\n    setUser({ username: \"vivek\" }); // ideally decoded from token\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAgBU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAChF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAA8B,IAAI,CAAC;EAEnED,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,EAAE;MACT;MACAK,OAAO,CAAC;QAAEC,QAAQ,EAAE;MAAQ,CAAC,CAAC,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,MAAMO,KAAK,GAAIC,QAAgB,IAAK;IAClCN,YAAY,CAACO,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;IACvCP,QAAQ,CAACO,QAAQ,CAAC;IAClBH,OAAO,CAAC;MAAEC,QAAQ,EAAE;IAAQ,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCV,QAAQ,CAAC,IAAI,CAAC;IACdI,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEI,IAAI;MAAEG,KAAK;MAAEG;IAAO,CAAE;IAAAZ,QAAA,EACzDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CA5BWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA8BzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC5C,MAAMC,OAAO,GAAG/B,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAAC0B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}